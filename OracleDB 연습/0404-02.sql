SELECT PAY, BONUS, (PAY * 12 + BONUS) AS SALARY
FROM (
      SELECT 1000 AS PAY, 100 AS BONUS FROM DUAL
      UNION ALL
      SELECT 1000 AS PAY, 0   AS BONUS FROM DUAL
      UNION ALL
      SELECT 1000 AS PAY, NULL AS BONUS FROM DUAL
      );
      
SELECT PAY, BONUS, (PAY * 12 + NVL(BONUS, 0)) AS SALARY
FROM (
      SELECT 1000 AS PAY, 100 AS BONUS FROM DUAL
      UNION ALL
      SELECT 1000 AS PAY, 0   AS BONUS FROM DUAL
      UNION ALL
      SELECT 1000 AS PAY, NULL AS BONUS FROM DUAL
      );
      
SELECT NULL AS FROM DUAL WHERE 1 = 1;
SELECT NULL AS FROM DUAL WHERE 1 = 2;

-- HELLO ÀÏ±î?
SELECT NVL(MAX(NULL), 'HELLO') AS VAL
FROM DUAL
WHERE 1 = 2;

-- ¿ÖÁö??
SELECT *
FROM A_OUT_M
WHERE OUTBOUND_DATE = :OUTBOUND_DATE
AND ROWNUM = 1;
      
-- 
SELECT *
FROM A_OUT_D;
    
SELECT  COUNT(CASE WHEN BRAND_CD IS NULL THEN 1 ELSE NULL END) AS VAL, COUNT(1), COUNT(*), COUNT(BRAND_CD), COUNT(DISTINCT BRAND_CD)
FROM (
      SELECT '1001' AS BRAND_CD
      FROM DUAL
      UNION ALL
      SELECT '2001' AS BRAND_CD
      FROM DUAL
      UNION ALL
      SELECT NULL AS BRAND_CD
      FROM DUAL
      UNION ALL
      SELECT '1001' AS BRAND_CD
      FROM DUAL
);

--
SELECT COUNT(DISTINCT VAL)
FROM (
      SELECT BRAND_CD, CASE WHEN BRAND_CD IS NULL THEN 1 ELSE NULL END AS VAL
      FROM (
            SELECT '1001' AS BRAND_CD
            FROM DUAL
            UNION ALL
            SELECT '2001' AS BRAND_CD
            FROM DUAL
            UNION ALL
            SELECT NULL AS BRAND_CD
            FROM DUAL
            UNION ALL
            SELECT '1001' AS BRAND_CD
            FROM DUAL
      )
);

-- 
SELECT OUTBOUND_DATE, TO_CHAR(OUTBOUND_DATE, 'DY') AS DY, INVOICE_NO, ORDER_NM
FROM A_OUT_M
WHERE BRAND_CD = '1001';

SELECT OUTBOUND_DATE, 
       TO_CHAR(OUTBOUND_DATE, 'DAY') AS DY, 
       INVOICE_NO, 
       CASE MOD(TO_NUMBER(SUBSTR(INVOICE_NO, 2)), 2)
       WHEN 0 THEN 'Â¦'
       ELSE        'È¦'
       END AS EVENOOD,
       ORDER_NM
FROM A_OUT_M
WHERE BRAND_CD = '1001';

--
SELECT BRAND_CD, COUNT(INVOICE_NO) AS INVOICE_CNT
FROM A_OUT_M
GROUP BY BRAND_CD;


SELECT BRAND_CD, 
       TO_CHAR(OUTBOUND_DATE, 'DAY') AS DY, 
       COUNT(INVOICE_NO) AS INVOICE_CNT
FROM A_OUT_M
GROUP BY BRAND_CD, 
         TO_CHAR(OUTBOUND_DATE, 'DAY');
         
SELECT BRAND_CD, 
       CASE MOD(TO_NUMBER(SUBSTR(INVOICE_NO, 2)), 2)
       WHEN 0 THEN 'Â¦'
       ELSE        'È¦'
       END AS EVENOOD,
COUNT(INVOICE_NO) AS INVOICE_CNT
FROM A_OUT_M
GROUP BY BRAND_CD,
         CASE MOD(TO_NUMBER(SUBSTR(INVOICE_NO, 2)), 2)
         WHEN 0 THEN 'Â¦'
         ELSE        'È¦'
         END;

-- 1¹ø
SELECT OUTBOUND_DATE,
       TO_CHAR(OUTBOUND_DATE, 'DAY') AS DY, 
       INVOICE_NO,
       CASE MOD(TO_NUMBER(SUBSTR(INVOICE_NO, 2)), 2)
       WHEN 0 THEN 'Â¦'
       ELSE        'È¦'
       END AS EVENOOD,
       ORDER_NM,
       CASE TO_CHAR(SUBSTR(OUT_TYPE_DIV, 1, 2))
       WHEN 'M1' THEN '»ó¿Â'
       ELSE           'Àú¿Â'
       END TEMP
FROM A_OUT_M
GROUP BY OUTBOUND_DATE, INVOICE_NO, ORDER_NM,        
       CASE TO_CHAR(SUBSTR(OUT_TYPE_DIV, 1, 2))
       WHEN 'M1' THEN '»ó¿Â'
       ELSE           'Àú¿Â'
       END;
       
SELECT BRAND_CD, 
       INVOICE_NO,
       LINE_NO,
       ITEM_CD,
       ORDER_QTY,
       CASE WHEN ORDER_QTY BETWEEN 1 AND 2 THEN 'ÇÏ'
            WHEN ORDER_QTY BETWEEN 3 AND 4 THEN 'Áß'
            ELSE '»ó'
       END AS GRADE
FROM A_OUT_D;

SELECT BRAND_CD,
       CASE TO_CHAR(SUBSTR(OUT_TYPE_DIV, 1, 2))
       WHEN 'M1' THEN '»ó¿Â'
       ELSE           'Àú¿Â'
       END TEMP,
       COUNT(INVOICE_NO) AS INVOICE_CNT
FROM A_OUT_M
GROUP BY BRAND_CD,
         CASE TO_CHAR(SUBSTR(OUT_TYPE_DIV, 1, 2))
         WHEN 'M1' THEN '»ó¿Â'
         ELSE           'Àú¿Â'
         END;

SELECT BRAND_CD,
            CASE WHEN ORDER_QTY BETWEEN 1 AND 2 THEN 'ÇÏ'
            WHEN ORDER_QTY BETWEEN 3 AND 4 THEN 'Áß'
            ELSE '»ó'
       END AS GRADE,
       COUNT(INVOICE_NO) AS INVOICE_CNT
FROM A_OUT_D
GROUP BY BRAND_CD,
         CASE WHEN ORDER_QTY BETWEEN 1 AND 2 THEN 'ÇÏ'
         WHEN ORDER_QTY BETWEEN 3 AND 4 THEN 'Áß'
         ELSE '»ó'
         END;
         
SELECT CASE WHEN ROWNUM <= 2 THEN ITEM_CD ELSE 'etc' END AS ITEM,
       SUM(ORDER_CNT) AS QTY
FROM (
       SELECT ITEM_CD,
       SUM(ORDER_QTY) AS ORDER_CNT
       FROM A_OUT_D
       GROUP BY ITEM_CD
       ORDER BY ORDER_CNT DESC
)
GROUP BY CASE WHEN ROWNUM <= 2 THEN ITEM_CD ELSE 'etc' END
;


