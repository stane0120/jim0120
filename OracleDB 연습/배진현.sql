-- 1번 문제
SELECT TO_CHAR(OUTBOUND_DATE, 'YYYY-MM') AS OUT_DATE
      ,COUNT(INVOICE_NO) AS INV_CNT
      ,SUM(SET_QTY) AS SET_QTY
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN '2019-06-01' AND '2019-08-31'
 GROUP BY TO_CHAR(OUTBOUND_DATE, 'YYYY-MM')
 ORDER BY TO_CHAR(OUTBOUND_DATE, 'YYYY-MM');

-- 2번 문제
SELECT M1.OUT_TYPE_DIV, SUM(D1.ORDER_QTY) AS SUM_QTY
  FROM LO_OUT_M M1
  JOIN LO_OUT_D D1 ON D1.INVOICE_NO = M1.INVOICE_NO
 WHERE M1.OUTBOUND_DATE = '2019-09-03'
 GROUP BY M1.OUT_TYPE_DIV
HAVING SUM(D1.ORDER_QTY) >= 5000
 ORDER BY CASE WHEN M1.OUT_TYPE_DIV LIKE 'M1%' THEN SUM(D1.ORDER_QTY) END, OUT_TYPE_DIV;
              
-- 3번 문제
SELECT CASE WHEN ROWNUM <= 10 THEN TO_CHAR(OUTBOUND_DATE) ELSE 'ETC' END AS OUT_DATE,
       CASE WHEN ROWNUM <= 10 THEN ITEM_CD ELSE '' END AS ITE_CD,
       CASE WHEN ROWNUM <= 10 THEN ITEM_NM ELSE '' END AS ITEM_NM,
       SUM(SUM_QTY) AS SUM_QTY
  FROM (
        SELECT OUTBOUND_DATE, ITEM_CD, ITEM_NM, SUM(SUM_QTY) AS SUM_QTY
          FROM (
                SELECT M1.OUTBOUND_DATE, D1.ITEM_CD, D1.ITEM_NM, SUM(ORDER_QTY) AS SUM_QTY
                  FROM LO_OUT_M M1
                  JOIN LO_OUT_D D1 ON D1.INVOICE_NO = M1.INVOICE_NO
                 WHERE M1.OUTBOUND_DATE BETWEEN '2019-06-01' AND '2019-06-30'
                   AND D1.ITEM_NM LIKE '%참치%'
                 GROUP BY M1.OUTBOUND_DATE, D1.ITEM_CD, D1.ITEM_NM
               ) M1
               GROUP BY OUTBOUND_DATE, ITEM_CD, ITEM_NM
               ORDER BY SUM_QTY DESC
) C1
 GROUP BY CASE WHEN ROWNUM <= 10 THEN TO_CHAR(OUTBOUND_DATE) ELSE 'ETC' END,
          CASE WHEN ROWNUM <= 10 THEN ITEM_CD ELSE '' END,
          CASE WHEN ROWNUM <= 10 THEN ITEM_NM ELSE '' END
 ORDER BY CASE WHEN OUT_DATE = 'ETC' THEN 2 ELSE 1 END, SUM_QTY DESC;

-- 4번 문제
SELECT CASE WHEN ROWNUM <= 9 THEN DANSU
            WHEN ROWNUM <= 18 THEN '3단'
            WHEN ROWNUM <= 27 THEN '4단'
            WHEN ROWNUM <= 36 THEN '5단'
            WHEN ROWNUM <= 45 THEN '6단'
            WHEN ROWNUM <= 54 THEN '7단'
            WHEN ROWNUM <= 63 THEN '8단'
            WHEN ROWNUM <= 72 THEN '9단' END AS DANSU, 
       CASE WHEN ROWNUM <= 9  THEN TO_CHAR(CONTENTS || 'x' || ROWNUM || '=' || TO_NUMBER(CONTENTS * ROWNUM))
            WHEN ROWNUM <= 18 THEN TO_CHAR(CONTENTS + 1|| 'x' || (ROWNUM - 9)  || '=' || TO_NUMBER((CONTENTS + 1) * (ROWNUM - 9 )))
            WHEN ROWNUM <= 27 THEN TO_CHAR(CONTENTS + 2|| 'x' || (ROWNUM - 18) || '=' || TO_NUMBER((CONTENTS + 2) * (ROWNUM - 18)))
            WHEN ROWNUM <= 36 THEN TO_CHAR(CONTENTS + 3|| 'x' || (ROWNUM - 27) || '=' || TO_NUMBER((CONTENTS + 3) * (ROWNUM - 27)))
            WHEN ROWNUM <= 45 THEN TO_CHAR(CONTENTS + 4|| 'x' || (ROWNUM - 36) || '=' || TO_NUMBER((CONTENTS + 4) * (ROWNUM - 36)))
            WHEN ROWNUM <= 54 THEN TO_CHAR(CONTENTS + 5|| 'x' || (ROWNUM - 45) || '=' || TO_NUMBER((CONTENTS + 5) * (ROWNUM - 45)))
            WHEN ROWNUM <= 63 THEN TO_CHAR(CONTENTS + 6|| 'x' || (ROWNUM - 54) || '=' || TO_NUMBER((CONTENTS + 6) * (ROWNUM - 54)))
            WHEN ROWNUM <= 72 THEN TO_CHAR(CONTENTS + 7|| 'x' || (ROWNUM - 63) || '=' || TO_NUMBER((CONTENTS + 7) * (ROWNUM - 63)))
        END AS CONTENTS
FROM(
      SELECT '2단' AS DANSU,
             '2' AS CONTENTS
       FROM  DUAL
       JOIN (SELECT *
             FROM CS_NO
             WHERE NO <= 72) ON 1 = 1
)  M1
;

SELECT TO_CHAR(C1.NO) || '단' AS DANSU
      ,TO_CHAR(C1.NO) || 'x' || TO_CHAR(C2.NO) || '=' || (TO_CHAR(C1.NO) * (C2.NO)) AS CONTENTS
  FROM CS_NO C1
  JOIN CS_NO C2 ON C2.NO <= 9
 WHERE C1.NO BETWEEN 2 AND 9;

-- 보너스 문제
SELECT CASE :SCHOOL WHEN '1' THEN TO_CHAR('초등학교' || ROWNUM || '학년')
                    WHEN '2' THEN TO_CHAR('중학교' || ROWNUM || '학년')
                    WHEN '3' THEN TO_CHAR('고등학교' || ROWNUM || '학년') END AS SCHOOL,
       CASE :SCHOOL WHEN '1' THEN TO_DATE(TO_CHAR(:BIRTHDAY, 'YYYY') + 8) 
                    WHEN '2' THEN TO_DATE(TO_CHAR(:BIRTHDAY, 'YYYY') + 14)
                    WHEN '3' THEN TO_DATE(TO_CHAR(:BIRTHDAY, 'YYYY') + 17) END AS YEAR
  FROM (SELECT '초등학교 1학년' AS SCHOOL,
                '1978' AS YEAR
          FROM DUAL
          JOIN CS_NO C1 ON C1.NO = TO_CHAR(CASE :SCHOOL WHEN '1' THEN '6'
                                                        WHEN '2' THEN '3'
                                                        WHEN '3' THEN '3' END)
);